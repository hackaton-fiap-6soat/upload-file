name: Deploy to AWS

on:
  push:
    branches:
      - main

jobs: 
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install boto3 pytest

      - name: Run tests
        run: |
          pytest

  deploy:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Criar bucket S3 e enviar arquivos ZIP
        run: |
          aws configure set cli_pager ""          
          echo "BUCKET_NAME=$BUCKET_NAME" >> $GITHUB_ENV
          aws s3api create-bucket --bucket $BUCKET_NAME --region us-east-1
          aws s3 cp lambda-api.zip s3://$BUCKET_NAME/lambda-api.zip
          aws s3 cp lambda-sqs.zip s3://$BUCKET_NAME/lambda-sqs.zip
        # env:
        #   AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
        #   AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        #   AWS_SESSION_TOKEN:  ${{ secrets.AWS_SESSION_TOKEN }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: terraform init -backend-config="bucket=${INPUT_BUCKET}" -backend-config="key=lambda.tfstate" -backend-config="region=us-east-1"
        working-directory: terraform

      - name: Terraform Apply
        run: terraform apply -auto-approve -var "bucket=${INPUT_BUCKET}" -var "sqs=${SQS_URL}"
        working-directory: terraform
        env:
          SQS_URL: ${{ secrets.SQS_URL }}
          INPUT_BUCKET: ${{ secrets.INPUT_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}